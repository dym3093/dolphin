设计模式之 Composite(组合)
Composite 模式定义:
将对象以树形结构组织起来,以达成“部分-整体” 的层次结构,使得客户端对单个对象和
组合对象的使用具有一致性.
Composite 比较容易理解,想到 Composite 就应该想到树形结构图。组合体内这些对象
都有共同接口,当组合体一个对象的方法被调用执行时,Composite 将遍历(Iterator)
整个树形结构,寻找同样包含这个方法的对象并实现调用执行。可以用牵一动百来形容。
所以 Composite 模式使用到 Iterator 模式,和 Chain of Responsibility 模式类
似。
Composite 好处:
1.使客户端调用简单,客户端可以一致的使用组合结构或其中单个对象,用户就不必关系
自己处理的是单个对象还是整个组合结构,这就简化了客户端代码。
2.更容易在组合体内加入对象部件. 客户端不必因为加入了新的对象部件而更改代码。
如何使用 Composite?
首先定义一个接口或抽象类,这是设计模式通用方式了,其他设计模式对接口内部定义限制
不多, Composite 却有个规定,那就是要在接口内部定义一个用于访问和管理 Composite
组合体的对象们(或称部件 Component).