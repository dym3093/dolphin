设计模式之 Singleton(单态)
单态定义:
Singleton 模式主要作用是保证在 Java 应用程序中,一个类 Class 只有一个实例存在。
在很多操作中,比如建立目录 数据库连接都需要这样的单线程操作。
还有, singleton 能够被状态化; 这样,多个单态类在一起就可以作为一个状态仓库一样
向外提供服务,比如,你要论坛中的帖子计数器,每次浏览一次需要计数,单态类能否保持
住这个计数,并且能 synchronize 的安全自动加 1,如果你要把这个数字永久保存到数据
库,你可以在不修改单态接口的情况下方便的做到。
另外方面,Singleton 也能够被无状态化。提供工具性质的功能,
Singleton 模式就为我们提供了这样实现的可能。使用 Singleton 的好处还在于可以节
省内存,因为它限制了实例的个数,有利于 Java 垃圾回收(garbage collection)。
我们常常看到工厂模式中类装入器(class loader)中也用 Singleton 模式实现的,因为
被装入的类实际也属于资源。